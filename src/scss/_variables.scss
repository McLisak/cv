// Colors

$color-bg: #203a44;
$color-primary: #ec7d16;
$color-scrollbar: #3c5f6d;
$scrollbar-width: 7px;

// Shadows
@function pulled-shadow($x, $y) {
  @return #{$x}px #{$y}px #{$y}px darken($color-bg, 8%),
    -#{$x * 2}px #{-$y * 2}px #{$y * 3}px lighten($color-bg, 4%),
    #{$x * 2}px #{$y * 2}px #{$y * 4}px darken($color-bg, 8%);
}
@function pushed-shadow($x, $y) {
  @return inset #{$x}px #{$y}px #{$y}px darken($color-bg, 8%),
    inset -#{$x * 2}px #{-$y * 2}px #{$y * 3}px lighten($color-bg, 4%),
    inset #{$x * 2}px #{$y * 2}px #{$y * 4}px darken($color-bg, 8%);
}

$pulled-shadow: pulled-shadow(3, 4);
$pushed-shadow: pushed-shadow(3, 4);

@mixin pulled-shadow {
  box-shadow: $pulled-shadow;
}
@mixin pushed-shadow {
  box-shadow: $pushed-shadow;
}
@mixin frame-shadow {
  box-shadow: $pulled-shadow;
  &::after {
    content: '';
    pointer-events: none;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    border-radius: inherit;
    box-shadow: $pushed-shadow;
  }
}

$inset-shadow: inset 3px 3px 6px rgba(black, 0.4), inset 5px 5px 6px rgba(black, 0.2),
  inset -3px -3px 6px rgba(black, 0.4), inset -5px -5px 6px rgba(black, 0.2);
@mixin inset-shadow {
  box-shadow: $inset-shadow;
}

$text-3d-shadow: -0.02em -0.02em 0.02em rgba(whitesmoke, 0.06),
  -0.04em -0.04em 0.05em rgba(whitesmoke, 0.03), 0.02em 0.02em 0.02em rgba(black, 0.3),
  0.04em 0.04em 0.05em rgba(black, 0.2);

@mixin text-pulled {
  color: lighten($color-bg, 0.5%);
  text-shadow: $text-3d-shadow;
}

@mixin text-pushed {
  color: transparent;
  text-shadow: 0.02em 0.03em 0.015em rgba(whitesmoke, 0.05), 0 0 0 darken($color-bg, 9%);
}

$light-angle: 145deg;

@function lighting-gradient($angle: $light-angle, $color: $color-bg, $power: 1) {
  @if ($color == 'neutral') {
    $color1: rgba(whitesmoke, 0.04 * $power);
    $color2: rgba(black, 0.1 * $power);
    @return linear-gradient($angle, $color1, transparent 50%, $color2);
  } @else {
    $color1: lighten($color, 3%);
    $color2: darken($color, 3%);
    @return linear-gradient($angle, $color1, $color2);
  }
}

$key-shadow-umbra-colour: rgba(black, 0.1);
$key-shadow-penumbra-colour: rgba(black, 0.2);
$ambient-shadow-colour: rgba(black, 0.33);

$key-shadow-umbra-map: (
  1: 0 0 2px 0 $key-shadow-umbra-colour,
  2: 0 0 4px 0 $key-shadow-umbra-colour,
  3: 0 1px 6px 0 $key-shadow-umbra-colour,
  4: 0 2px 4px 0 $key-shadow-umbra-colour,
  5: 0 4px 6px 0 $key-shadow-umbra-colour,
  6: 0 6px 10px 0 $key-shadow-umbra-colour,
  7: 0 6px 10px 0 $key-shadow-umbra-colour,
  8: 0 8px 10px 1px $key-shadow-umbra-colour,
  9: 0 9px 12px 2px $key-shadow-umbra-colour,
  10: 0 10px 13px 2px $key-shadow-umbra-colour,
  11: 0 11px 14px 2px $key-shadow-umbra-colour,
  12: 0 12px 16px 2px $key-shadow-umbra-colour,
  13: 0 13px 18px 2px $key-shadow-umbra-colour,
  14: 0 14px 21px 2px $key-shadow-umbra-colour,
  15: 0 15px 22px 2px $key-shadow-umbra-colour,
  16: 0 16px 23px 2px $key-shadow-umbra-colour,
  17: 0 17px 24px 2px $key-shadow-umbra-colour,
  18: 0 18px 25px 3px $key-shadow-umbra-colour,
  19: 0 19px 26px 3px $key-shadow-umbra-colour,
  20: 0 20px 28px 3px $key-shadow-umbra-colour,
  21: 0 21px 30px 3px $key-shadow-umbra-colour,
  22: 0 22px 32px 3px $key-shadow-umbra-colour,
  23: 0 23px 36px 3px $key-shadow-umbra-colour,
  24: 0 24px 38px 3px $key-shadow-umbra-colour,
);

$key-shadow-penumbra-map: (
  1: 0 2px 2px 0 $key-shadow-penumbra-colour,
  2: 0 3px 4px 0 $key-shadow-penumbra-colour,
  3: 0 3px 4px 0 $key-shadow-penumbra-colour,
  4: 0 4px 5px 0 $key-shadow-penumbra-colour,
  5: 0 4px 5px 0 $key-shadow-penumbra-colour,
  6: 0 1px 18px 0 $key-shadow-penumbra-colour,
  7: 0 2px 18px 1px $key-shadow-penumbra-colour,
  8: 0 3px 14px 2px $key-shadow-penumbra-colour,
  9: 0 3px 18px 3px $key-shadow-penumbra-colour,
  10: 0 4px 16px 3px $key-shadow-penumbra-colour,
  11: 0 4px 18px 3px $key-shadow-penumbra-colour,
  12: 0 5px 22px 4px $key-shadow-penumbra-colour,
  13: 0 5px 26px 4px $key-shadow-penumbra-colour,
  14: 0 5px 29px 4px $key-shadow-penumbra-colour,
  15: 0 6px 34px 5px $key-shadow-penumbra-colour,
  16: 0 6px 30px 5px $key-shadow-penumbra-colour,
  17: 0 6px 36px 5px $key-shadow-penumbra-colour,
  18: 0 7px 33px 6px $key-shadow-penumbra-colour,
  19: 0 7px 37px 6px $key-shadow-penumbra-colour,
  20: 0 8px 34px 6px $key-shadow-penumbra-colour,
  21: 0 8px 39px 7px $key-shadow-penumbra-colour,
  22: 0 9px 38px 7px $key-shadow-penumbra-colour,
  23: 0 9px 40px 7px $key-shadow-penumbra-colour,
  24: 0 9px 46px 8px $key-shadow-penumbra-colour,
);

$ambient-shadow-map: (
  1: 0 1px 3px 0 $ambient-shadow-colour,
  2: 0 1px 5px 0 $ambient-shadow-colour,
  3: 0 1px 7px 0 $ambient-shadow-colour,
  4: 0 1px 8px 0 $ambient-shadow-colour,
  5: 0 1px 10px 0 $ambient-shadow-colour,
  6: 0 3px 5px 0 $ambient-shadow-colour,
  7: 0 3px 8px 0 $ambient-shadow-colour,
  8: 0 4px 15px 0 $ambient-shadow-colour,
  9: 0 5px 11px 0 $ambient-shadow-colour,
  10: 0 5px 14px 0 $ambient-shadow-colour,
  11: 0 6px 10px 0 $ambient-shadow-colour,
  12: 0 6px 13px 0 $ambient-shadow-colour,
  13: 0 7px 10px 0 $ambient-shadow-colour,
  14: 0 7px 12px 0 $ambient-shadow-colour,
  15: 0 7px 14px 0 $ambient-shadow-colour,
  16: 0 8px 13px 0 $ambient-shadow-colour,
  17: 0 8px 15px 0 $ambient-shadow-colour,
  18: 0 9px 11px 0 $ambient-shadow-colour,
  19: 0 9px 13px 0 $ambient-shadow-colour,
  20: 0 9px 15px 0 $ambient-shadow-colour,
  21: 0 10px 12px 0 $ambient-shadow-colour,
  22: 0 10px 15px 0 $ambient-shadow-colour,
  23: 0 11px 13px 0 $ambient-shadow-colour,
  24: 0 11px 15px 0 $ambient-shadow-colour,
);

// If you don't want all the classes can also just include this mixin and provide an elevation value in any class
@mixin elevation($elevation) {
  box-shadow: map-get($key-shadow-umbra-map, $elevation),
    map-get($key-shadow-penumbra-map, $elevation), map-get($ambient-shadow-map, $elevation);
}

@mixin text-shadow($elevation: 1, $dark-color: rgba(black, 0.6)) {
  @if $elevation == 0 {
    text-shadow: 0 1px 1px $dark-color;
  } @else if $elevation == 1 {
    text-shadow: 0 2px 2px $dark-color;
  } @else if $elevation == 2 {
    text-shadow: 0 2px 2px $dark-color, 0 3px 5px lighten($dark-color, 20%);
  } @else if $elevation == 3 {
    text-shadow: 0 2px 2px $dark-color, 0 3px 5px lighten($dark-color, 10%),
      0 5px 10px lighten($dark-color, 20%);
  }
}

// Beziers
$bezier-out-cubic: cubic-bezier(0.215, 0.61, 0.355, 1);
$bezier-in-cubic: cubic-bezier(0.55, 0.055, 0.675, 0.19);

// pseudo classes
%pseudo-cover {
  content: '';
  position: absolute;
  left: 0;
  top: 0;
  bottom: 0;
  right: 0;
}

$border-radius: 10px;

// patterns

@mixin pattern-scotch() {
  background-color: var(--color-bg);
  background-image: repeating-linear-gradient(
      transparent,
      transparent 50px,
      rgba(0, 0, 0, 0.3) 50px,
      rgba(0, 0, 0, 0.3) 53px,
      transparent 53px,
      transparent 63px,
      rgba(0, 0, 0, 0.3) 63px,
      rgba(0, 0, 0, 0.3) 66px,
      transparent 66px,
      transparent 116px,
      rgba(0, 0, 0, 0.2) 116px,
      rgba(0, 0, 0, 0.2) 166px,
      rgba(255, 255, 255, 0.1) 166px,
      rgba(255, 255, 255, 0.1) 169px,
      rgba(0, 0, 0, 0.2) 169px,
      rgba(0, 0, 0, 0.2) 179px,
      rgba(255, 255, 255, 0.1) 179px,
      rgba(255, 255, 255, 0.1) 182px,
      rgba(0, 0, 0, 0.2) 182px,
      rgba(0, 0, 0, 0.2) 232px,
      transparent 232px
    ),
    repeating-linear-gradient(
      270deg,
      transparent,
      transparent 50px,
      rgba(0, 0, 0, 0.3) 50px,
      rgba(0, 0, 0, 0.3) 53px,
      transparent 53px,
      transparent 63px,
      rgba(0, 0, 0, 0.3) 63px,
      rgba(0, 0, 0, 0.3) 66px,
      transparent 66px,
      transparent 116px,
      rgba(0, 0, 0, 0.2) 116px,
      rgba(0, 0, 0, 0.2) 166px,
      rgba(255, 255, 255, 0.1) 166px,
      rgba(255, 255, 255, 0.1) 169px,
      rgba(0, 0, 0, 0.2) 169px,
      rgba(0, 0, 0, 0.2) 179px,
      rgba(255, 255, 255, 0.1) 179px,
      rgba(255, 255, 255, 0.1) 182px,
      rgba(0, 0, 0, 0.2) 182px,
      rgba(0, 0, 0, 0.2) 232px,
      transparent 232px
    );
}
@mixin pattern-upholstery() {
  background: radial-gradient(
        hsl(197, 36%, 22%) 4%,
        hsl(197, 36%, 13%) 9%,
        hsla(197, 36%, 15%, 0) 9%
      )
      0 0,
    radial-gradient(hsl(197, 36%, 22%) 4%, hsl(197, 36%, 13%) 8%, hsla(197, 36%, 15%, 0) 10%) 50px
      50px,
    radial-gradient(hsla(197, 36%, 25%, 0.8) 20%, hsla(197, 36%, 15%, 0)) 50px 0,
    radial-gradient(hsla(197, 36%, 24%, 0.8) 20%, hsla(197, 36%, 15%, 0)) 0 50px,
    radial-gradient(hsla(197, 36%, 15%, 1) 35%, hsla(197, 36%, 15%, 0) 60%) 50px 0,
    radial-gradient(hsla(197, 36%, 15%, 1) 35%, hsla(197, 36%, 15%, 0) 60%) 100px 50px,
    radial-gradient(hsla(197, 36%, 10%, 0.7), hsla(197, 36%, 15%, 0)) 0 0,
    radial-gradient(hsla(197, 36%, 10%, 0.7), hsla(197, 36%, 15%, 0)) 50px 50px,
    linear-gradient(
        45deg,
        hsla(197, 36%, 20%, 0) 49%,
        hsla(197, 36%, 0%, 1) 50%,
        hsla(197, 36%, 20%, 0) 70%
      )
      0 0,
    linear-gradient(
        -45deg,
        hsla(197, 36%, 20%, 0) 49%,
        hsla(197, 36%, 0%, 1) 50%,
        hsla(197, 36%, 20%, 0) 70%
      )
      0 0;
  background-color: var(--color-bg);
  background-size: 100px 100px;
}
@mixin pattern-scallop($color: $color-bg) {
  background: repeating-linear-gradient(
    135deg,
    $color,
    lighten($color, 10%) 10px,
    darken($color, 10%) 10px,
    $color 30px
  );
  background-color: $color;
}
@mixin pattern-flat-panels($color: $color-bg) {
  background: repeating-linear-gradient(
    135deg,
    darken($color, 8%),
    darken($color, 8%) 4px,
    $color 4px,
    $color 97px
  );
  background-color: $color;
}
@mixin pattern-stars($color: $color-bg) {
  background: radial-gradient($color 75%, darken($color, 10%)) 5px 5px;
  background-size: 15px 15px;
  background-color: $color;
}
// media
$breakpoints: (
  s: 479px,
  m: 767px,
  l: 991px,
);
@mixin screen($size) {
  @media screen and (min-width: map-get($breakpoints, $size)) {
    @content;
  }
}
